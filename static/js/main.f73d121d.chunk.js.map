{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","goodsFromServer","numbers","App","useState","selectedGoods","setSelectedGoods","isVisible","setIsVisible","numberValue","setNumberValue","sort","sortBy","current","g1","g2","localeCompare","length","visibleGoods","filter","type","onClick","reverse","value","onChange","event","Number","target","number","ReactDOM","render","document","getElementById"],"mappings":"oQAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,qBAAKC,UAAU,iEAAf,SAGE,oBAAIA,UAAU,gFAAd,SAGGD,EAAME,KAAI,SAAAC,GAAI,OACb,6BACGA,GADMA,WCVXC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAgHvCC,EA9GO,WACpB,MAA0CC,mBAAS,GAAD,OAAKH,IAAvD,mBAAOI,EAAP,KAAsBC,EAAtB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAMMC,EAAO,SAACC,GACZN,GAAiB,SAAAO,GAAO,OAAI,YAAIA,GAASF,MAAK,SAACG,EAAIC,GACjD,OAAQH,GACN,IAAK,SACH,OAAOE,EAAGE,cAAcD,GAE1B,IAAK,SACH,OAAOD,EAAGG,OAASF,EAAGE,OAExB,QACE,OAAO,UAKTC,EAAeb,EAAcc,QAAO,SAAAnB,GAAI,OAC5CA,EAAKiB,QAAUR,KAGjB,OACE,sBAAKX,UAAU,yCAAf,UACE,oBAAIA,UAAU,OAAd,mBACCS,EACG,cAAC,EAAD,CAAWV,MAAOqB,IAElB,wBACEE,KAAK,SACLtB,UAAU,8BACVuB,QAAS,WACPb,GAAa,SAAAK,GAAO,OAAKA,MAJ7B,mBAWHN,GACC,qCACE,wBACEa,KAAK,SACLtB,UAAU,gCACVuB,QAAS,WA5CjBf,GAAiB,SAAAO,GAAO,OAAI,YAAIA,GAASS,cAyCnC,qBAUA,wBACEF,KAAK,SACLtB,UAAU,mCACVuB,QAAS,WACPV,EAAK,WAJT,iCAUA,wBACES,KAAK,SACLtB,UAAU,kCACVuB,QAAS,WACPX,EAAe,GACfJ,EAAiB,GAAD,OAAKL,KALzB,mBAWA,wBACEmB,KAAK,SACLtB,UAAU,mCACVuB,QAAS,WACPV,EAAK,WAJT,4BAUA,wBACEb,UAAU,mCACVyB,MAAOd,EACPe,SAAU,SAACC,GAAD,OACRf,EAAegB,OAAOD,EAAME,OAAOJ,SAJvC,SAOGrB,EAAQH,KAAI,SAAA6B,GAAM,OACjB,wBACEL,MAAOK,EADT,SAIGA,GAFIA,eClHrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f73d121d.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.css';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <div className=\"box is-flex is-flex-direction-column\n    has-text-centered mx-auto\"\n  >\n    <ul className=\"block is-flex is-flex-direction-column\n      is-align-items-flex-start mx-auto mt-0\"\n    >\n      {goods.map(good => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst numbers: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nconst App: React.FC = () => {\n  const [selectedGoods, setSelectedGoods] = useState([...goodsFromServer]);\n  const [isVisible, setIsVisible] = useState(false);\n  const [numberValue, setNumberValue] = useState(0);\n\n  const reverse = () => {\n    setSelectedGoods(current => [...current].reverse());\n  };\n\n  const sort = (sortBy: string) => {\n    setSelectedGoods(current => [...current].sort((g1, g2) => {\n      switch (sortBy) {\n        case 'alphab':\n          return g1.localeCompare(g2);\n\n        case 'length':\n          return g1.length - g2.length;\n\n        default:\n          return 0;\n      }\n    }));\n  };\n\n  const visibleGoods = selectedGoods.filter(good => (\n    good.length >= numberValue\n  ));\n\n  return (\n    <div className=\"App content is-large has-text-centered\">\n      <h1 className=\"fs-2\">Goods</h1>\n      {isVisible\n        ? <GoodsList goods={visibleGoods} />\n        : (\n          <button\n            type=\"button\"\n            className=\"button is-medium is-primary\"\n            onClick={() => {\n              setIsVisible(current => !current);\n            }}\n          >\n            Start\n          </button>\n        )}\n\n      {isVisible && (\n        <>\n          <button\n            type=\"button\"\n            className=\"button is-medium is-link mx-2\"\n            onClick={() => {\n              reverse();\n            }}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-medium is-primary mx-2\"\n            onClick={() => {\n              sort('alphab');\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-medium is-danger mx-2\"\n            onClick={() => {\n              setNumberValue(0);\n              setSelectedGoods([...goodsFromServer]);\n            }}\n          >\n            Reset\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-medium is-warning mx-2\"\n            onClick={() => {\n              sort('length');\n            }}\n          >\n            Sort by length\n          </button>\n\n          <select\n            className=\"select is-medium is-primary mx-4\"\n            value={numberValue}\n            onChange={(event) => (\n              setNumberValue(Number(event.target.value))\n            )}\n          >\n            {numbers.map(number => (\n              <option\n                value={number}\n                key={number}\n              >\n                {number}\n              </option>\n            ))}\n          </select>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}